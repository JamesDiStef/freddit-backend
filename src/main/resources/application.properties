# Application Configuration
spring.application.name=freddit-backend
server.port=8080
server.servlet.context-path=/api

# Database Configuration
# Development (H2)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Production (PostgreSQL) - uncomment for production
# spring.datasource.url=jdbc:postgresql://localhost:5432/freddit
# spring.datasource.username=${DB_USERNAME:freddit}
# spring.datasource.password=${DB_PASSWORD:password}
# spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# For PostgreSQL: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Redis Configuration (Optional - will use in-memory cache if Redis not available)
# spring.data.redis.host=localhost
# spring.data.redis.port=6379
# spring.data.redis.password=
# spring.data.redis.timeout=2000ms
# spring.data.redis.lettuce.pool.max-active=8
# spring.data.redis.lettuce.pool.max-wait=-1ms
# spring.data.redis.lettuce.pool.max-idle=8
# spring.data.redis.lettuce.pool.min-idle=0

# Cache Configuration (Use simple cache for local development)
spring.cache.type=simple
spring.cache.cache-names=users,posts,subreddits

# Security Configuration (Disabled - API is completely open)
# jwt.secret=${JWT_SECRET:mySecretKey}
# jwt.expiration=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# Logging Configuration
logging.level.com.example.demo=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Application specific properties
app.name=Freddit Backend
app.version=1.0.0
app.description=Enterprise-level Reddit-like backend API
